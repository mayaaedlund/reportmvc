<?php

namespace ContainerFg8xACN;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_X0sQrK9Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.x0sQrK9' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.x0sQrK9'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Controller\\CardGameController::dealerCard' => ['privates', '.service_locator.F5lUhMl', 'get_ServiceLocator_F5lUhMlService', true],
            'App\\Controller\\CardGameController::playCard' => ['privates', '.service_locator.F5lUhMl', 'get_ServiceLocator_F5lUhMlService', true],
            'App\\Controller\\DrawCardController::draw_multiple' => ['privates', '.service_locator.7Jg0Qfp', 'get_ServiceLocator_7Jg0QfpService', true],
            'App\\Controller\\DrawCardController::initCallback' => ['privates', '.service_locator.7Jg0Qfp', 'get_ServiceLocator_7Jg0QfpService', true],
            'App\\Controller\\DrawCardController::start' => ['privates', '.service_locator.7Jg0Qfp', 'get_ServiceLocator_7Jg0QfpService', true],
            'App\\Controller\\LibraryController::changeBook' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\LibraryController::createBook' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\LibraryController::deleteBook' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\LibraryController::getAllBooks' => ['privates', '.service_locator.mFXXG35', 'get_ServiceLocator_MFXXG35Service', true],
            'App\\Controller\\LibraryController::getBookByISBN' => ['privates', '.service_locator.mFXXG35', 'get_ServiceLocator_MFXXG35Service', true],
            'App\\Controller\\LibraryController::showBookById' => ['privates', '.service_locator.mFXXG35', 'get_ServiceLocator_MFXXG35Service', true],
            'App\\Controller\\LibraryController::updateBook' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\LibraryController::viewAllLibrary' => ['privates', '.service_locator.mFXXG35', 'get_ServiceLocator_MFXXG35Service', true],
            'App\\Controller\\MarineCoverageController::createMarineCoverageData' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\MarineCoverageController::deleteAllMarineCoverage' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\MarineCoverageController::getMarineData' => ['privates', '.service_locator.I7ShMUG', 'get_ServiceLocator_I7ShMUGService', true],
            'App\\Controller\\MarineCoverageController::showMarineCoverageData' => ['privates', '.service_locator.odF7kRX', 'get_ServiceLocator_OdF7kRXService', true],
            'App\\Controller\\MarineProtectionController::createMarineProtection' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\MarineProtectionController::deleteAllMarine' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\MarineProtectionController::getMarineData' => ['privates', '.service_locator.ZriyrpM', 'get_ServiceLocator_ZriyrpMService', true],
            'App\\Controller\\MarineProtectionController::showAllMarine' => ['privates', '.service_locator.qXJl0lC', 'get_ServiceLocator_QXJl0lCService', true],
            'App\\Controller\\ProductController::createProduct' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\ProductController::deleteProductById' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\ProductController::showAllProduct' => ['privates', '.service_locator.DZowHzb', 'get_ServiceLocator_DZowHzbService', true],
            'App\\Controller\\ProductController::showProductById' => ['privates', '.service_locator.DZowHzb', 'get_ServiceLocator_DZowHzbService', true],
            'App\\Controller\\ProductController::updateProduct' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\ProductController::viewAllProduct' => ['privates', '.service_locator.DZowHzb', 'get_ServiceLocator_DZowHzbService', true],
            'App\\Controller\\SustainableFishController::createSustainableFishData' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\SustainableFishController::deleteAllSustainable' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\SustainableFishController::getSustainableFishData' => ['privates', '.service_locator.R2a.ugv', 'get_ServiceLocator_R2a_UgvService', true],
            'App\\Controller\\SustainableFishController::showSustainableFishData' => ['privates', '.service_locator.R2a.ugv', 'get_ServiceLocator_R2a_UgvService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Controller\\CardGameController:dealerCard' => ['privates', '.service_locator.F5lUhMl', 'get_ServiceLocator_F5lUhMlService', true],
            'App\\Controller\\CardGameController:playCard' => ['privates', '.service_locator.F5lUhMl', 'get_ServiceLocator_F5lUhMlService', true],
            'App\\Controller\\DrawCardController:draw_multiple' => ['privates', '.service_locator.7Jg0Qfp', 'get_ServiceLocator_7Jg0QfpService', true],
            'App\\Controller\\DrawCardController:initCallback' => ['privates', '.service_locator.7Jg0Qfp', 'get_ServiceLocator_7Jg0QfpService', true],
            'App\\Controller\\DrawCardController:start' => ['privates', '.service_locator.7Jg0Qfp', 'get_ServiceLocator_7Jg0QfpService', true],
            'App\\Controller\\LibraryController:changeBook' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\LibraryController:createBook' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\LibraryController:deleteBook' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\LibraryController:getAllBooks' => ['privates', '.service_locator.mFXXG35', 'get_ServiceLocator_MFXXG35Service', true],
            'App\\Controller\\LibraryController:getBookByISBN' => ['privates', '.service_locator.mFXXG35', 'get_ServiceLocator_MFXXG35Service', true],
            'App\\Controller\\LibraryController:showBookById' => ['privates', '.service_locator.mFXXG35', 'get_ServiceLocator_MFXXG35Service', true],
            'App\\Controller\\LibraryController:updateBook' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\LibraryController:viewAllLibrary' => ['privates', '.service_locator.mFXXG35', 'get_ServiceLocator_MFXXG35Service', true],
            'App\\Controller\\MarineCoverageController:createMarineCoverageData' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\MarineCoverageController:deleteAllMarineCoverage' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\MarineCoverageController:getMarineData' => ['privates', '.service_locator.I7ShMUG', 'get_ServiceLocator_I7ShMUGService', true],
            'App\\Controller\\MarineCoverageController:showMarineCoverageData' => ['privates', '.service_locator.odF7kRX', 'get_ServiceLocator_OdF7kRXService', true],
            'App\\Controller\\MarineProtectionController:createMarineProtection' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\MarineProtectionController:deleteAllMarine' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\MarineProtectionController:getMarineData' => ['privates', '.service_locator.ZriyrpM', 'get_ServiceLocator_ZriyrpMService', true],
            'App\\Controller\\MarineProtectionController:showAllMarine' => ['privates', '.service_locator.qXJl0lC', 'get_ServiceLocator_QXJl0lCService', true],
            'App\\Controller\\ProductController:createProduct' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\ProductController:deleteProductById' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\ProductController:showAllProduct' => ['privates', '.service_locator.DZowHzb', 'get_ServiceLocator_DZowHzbService', true],
            'App\\Controller\\ProductController:showProductById' => ['privates', '.service_locator.DZowHzb', 'get_ServiceLocator_DZowHzbService', true],
            'App\\Controller\\ProductController:updateProduct' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\ProductController:viewAllProduct' => ['privates', '.service_locator.DZowHzb', 'get_ServiceLocator_DZowHzbService', true],
            'App\\Controller\\SustainableFishController:createSustainableFishData' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\SustainableFishController:deleteAllSustainable' => ['privates', '.service_locator.o6sN0hZ', 'get_ServiceLocator_O6sN0hZService', true],
            'App\\Controller\\SustainableFishController:getSustainableFishData' => ['privates', '.service_locator.R2a.ugv', 'get_ServiceLocator_R2a_UgvService', true],
            'App\\Controller\\SustainableFishController:showSustainableFishData' => ['privates', '.service_locator.R2a.ugv', 'get_ServiceLocator_R2a_UgvService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
        ], [
            'App\\Controller\\CardGameController::dealerCard' => '?',
            'App\\Controller\\CardGameController::playCard' => '?',
            'App\\Controller\\DrawCardController::draw_multiple' => '?',
            'App\\Controller\\DrawCardController::initCallback' => '?',
            'App\\Controller\\DrawCardController::start' => '?',
            'App\\Controller\\LibraryController::changeBook' => '?',
            'App\\Controller\\LibraryController::createBook' => '?',
            'App\\Controller\\LibraryController::deleteBook' => '?',
            'App\\Controller\\LibraryController::getAllBooks' => '?',
            'App\\Controller\\LibraryController::getBookByISBN' => '?',
            'App\\Controller\\LibraryController::showBookById' => '?',
            'App\\Controller\\LibraryController::updateBook' => '?',
            'App\\Controller\\LibraryController::viewAllLibrary' => '?',
            'App\\Controller\\MarineCoverageController::createMarineCoverageData' => '?',
            'App\\Controller\\MarineCoverageController::deleteAllMarineCoverage' => '?',
            'App\\Controller\\MarineCoverageController::getMarineData' => '?',
            'App\\Controller\\MarineCoverageController::showMarineCoverageData' => '?',
            'App\\Controller\\MarineProtectionController::createMarineProtection' => '?',
            'App\\Controller\\MarineProtectionController::deleteAllMarine' => '?',
            'App\\Controller\\MarineProtectionController::getMarineData' => '?',
            'App\\Controller\\MarineProtectionController::showAllMarine' => '?',
            'App\\Controller\\ProductController::createProduct' => '?',
            'App\\Controller\\ProductController::deleteProductById' => '?',
            'App\\Controller\\ProductController::showAllProduct' => '?',
            'App\\Controller\\ProductController::showProductById' => '?',
            'App\\Controller\\ProductController::updateProduct' => '?',
            'App\\Controller\\ProductController::viewAllProduct' => '?',
            'App\\Controller\\SustainableFishController::createSustainableFishData' => '?',
            'App\\Controller\\SustainableFishController::deleteAllSustainable' => '?',
            'App\\Controller\\SustainableFishController::getSustainableFishData' => '?',
            'App\\Controller\\SustainableFishController::showSustainableFishData' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\CardGameController:dealerCard' => '?',
            'App\\Controller\\CardGameController:playCard' => '?',
            'App\\Controller\\DrawCardController:draw_multiple' => '?',
            'App\\Controller\\DrawCardController:initCallback' => '?',
            'App\\Controller\\DrawCardController:start' => '?',
            'App\\Controller\\LibraryController:changeBook' => '?',
            'App\\Controller\\LibraryController:createBook' => '?',
            'App\\Controller\\LibraryController:deleteBook' => '?',
            'App\\Controller\\LibraryController:getAllBooks' => '?',
            'App\\Controller\\LibraryController:getBookByISBN' => '?',
            'App\\Controller\\LibraryController:showBookById' => '?',
            'App\\Controller\\LibraryController:updateBook' => '?',
            'App\\Controller\\LibraryController:viewAllLibrary' => '?',
            'App\\Controller\\MarineCoverageController:createMarineCoverageData' => '?',
            'App\\Controller\\MarineCoverageController:deleteAllMarineCoverage' => '?',
            'App\\Controller\\MarineCoverageController:getMarineData' => '?',
            'App\\Controller\\MarineCoverageController:showMarineCoverageData' => '?',
            'App\\Controller\\MarineProtectionController:createMarineProtection' => '?',
            'App\\Controller\\MarineProtectionController:deleteAllMarine' => '?',
            'App\\Controller\\MarineProtectionController:getMarineData' => '?',
            'App\\Controller\\MarineProtectionController:showAllMarine' => '?',
            'App\\Controller\\ProductController:createProduct' => '?',
            'App\\Controller\\ProductController:deleteProductById' => '?',
            'App\\Controller\\ProductController:showAllProduct' => '?',
            'App\\Controller\\ProductController:showProductById' => '?',
            'App\\Controller\\ProductController:updateProduct' => '?',
            'App\\Controller\\ProductController:viewAllProduct' => '?',
            'App\\Controller\\SustainableFishController:createSustainableFishData' => '?',
            'App\\Controller\\SustainableFishController:deleteAllSustainable' => '?',
            'App\\Controller\\SustainableFishController:getSustainableFishData' => '?',
            'App\\Controller\\SustainableFishController:showSustainableFishData' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
